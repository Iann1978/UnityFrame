//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Assets_Script_SpriteFactoryWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Assets.Script.SpriteFactory), typeof(Assets.Script.Frame.Singleton<Assets.Script.SpriteFactory>));
		L.RegFunction("Get", Get);
		L.RegFunction("New", _CreateAssets_Script_SpriteFactory);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateAssets_Script_SpriteFactory(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Assets.Script.SpriteFactory obj = new Assets.Script.SpriteFactory();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Assets.Script.SpriteFactory.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Get(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Assets.Script.SpriteFactory obj = (Assets.Script.SpriteFactory)ToLua.CheckObject(L, 1, typeof(Assets.Script.SpriteFactory));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			UnityEngine.Sprite o = obj.Get(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

