//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GamedataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Gamedata), typeof(Assets.Script.Frame.Singleton<Gamedata>));
		L.RegFunction("New", _CreateGamedata);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("a", get_a, set_a);
		L.RegVar("userinfo", get_userinfo, set_userinfo);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGamedata(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Gamedata obj = new Gamedata();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Gamedata.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_a(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gamedata obj = (Gamedata)o;
			string ret = obj.a;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index a on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_userinfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gamedata obj = (Gamedata)o;
			UserInfo ret = obj.userinfo;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index userinfo on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_a(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gamedata obj = (Gamedata)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.a = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index a on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_userinfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gamedata obj = (Gamedata)o;
			UserInfo arg0 = (UserInfo)ToLua.CheckObject(L, 2, typeof(UserInfo));
			obj.userinfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index userinfo on a nil value" : e.Message);
		}
	}
}

